/*
 * EXI_program.c
 *
 *  Created on: Jun 20, 2024
 *      Author: Mohammad Tamer
 */


#include "../../LIB/BIT_MATH.h"
#include "../../LIB/STD_TYPES.h"

#include "EXI_config.h"
#include "EXI_interface.h"
#include "EXI_private.h"
#include "EXI_register.h"

void EXI_voidInt0Init(void)
{
	/*check sense control*/
#if INT0_SENSE == low_level
		CLR_BIT(MCUCR,MCUCR_ISC00);
		CLR_BIT(MCUCR,MCUCR_ISC01);

#elif INT0_SENSE == falling_edge
		CLR_BIT(MCUCR,MCUCR_ISC00);
		SET_BIT(MCUCR,MCUCR_ISC01);

#elif INT0_SENSE == rising_edge
		SET_BIT(MCUCR,MCUCR_ISC00);
		SET_BIT(MCUCR,MCUCR_ISC01);

#elif INT0_SENSE == on_change
		SET_BIT(MCUCR,MCUCR_ISC00);
		CLR_BIT(MCUCR,MCUCR_ISC01);

#else
#error "Wrong INT0_SENSE configuration option"

#endif
		/*peripheral interrupt enable for int0 */
#if INT0_INITIAL_STATE == ENABLED
		SET_BIT(GICR,GICR_INT0);

#elif INT0_INITIAL_STATE == DISABLED
		CLR_BIT(GICR,GICR_INT0);

#else
#error "Wrong INT0_INITIAL_STATE option"

#endif
}

void EXI_voidInt1Init(void)
{
	/*check sense control*/
#if INT1_SENSE == low_level
		CLR_BIT(MCUCR,MCUCR_ISC11);
		CLR_BIT(MCUCR,MCUCR_ISC10);

#elif INT1_SENSE == falling_edge
		CLR_BIT(MCUCR,MCUCR_ISC10);
		SET_BIT(MCUCR,MCUCR_ISC11);

#elif INT1_SENSE == rising_edge
		SET_BIT(MCUCR,MCUCR_ISC10);
		SET_BIT(MCUCR,MCUCR_ISC11);

#elif INT1_SENSE == on_change
		SET_BIT(MCUCR,MCUCR_ISC10);
		CLR_BIT(MCUCR,MCUCR_ISC11);

#else
#error "Wrong INT0_SENSE configuration option"

#endif
		/*peripheral interrupt enable for int1 */
#if INT1_INITIAL_STATE == ENABLED
		SET_BIT(GICR,GICR_INT1);

#elif INT1_INITIAL_STATE == DISABLED
		CLR_BIT(GICR,GICR_INT1);

#else
#error "Wrong INT0_INITIAL_STATE option"

#endif
}

void EXI_voidInt2Init(void)
{
#if INT2_SENSE == falling_edge
	CLR_BIT(MCUCSR,MCUCSR_INT2);
#elif INT2_SENSE == rising_edge
	SET_BIT(MCUCSR,MCUCSR_INT2);
#else
#error "Wrong INT0_SENSE configuration option"
#endif

	/*peripheral interrupt enable for int2 */
#if INT2_INITIAL_STATE == ENABLED
	SET_BIT(GICR,GICR_INT2);
#elif INT2_INITIAL_STATE == DISABLED
	CLR_BIT(GICR,GICR_INT2);
#else
#error "Wrong INT1_INITIAL_STATE option"
#endif
}

u8 EXI_SetSenseControl(u8 Pin_Copy ,u8 Sense_Copy)
{
	u8 Local_Error_Status = OK ;
	switch(Pin_Copy)
	{
		case
	}

}

