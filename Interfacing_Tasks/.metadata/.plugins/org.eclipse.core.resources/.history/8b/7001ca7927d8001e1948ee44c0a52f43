/*
 * main.c
 *
 *  Created on: Mar 1, 2024
 *      Author: Mohammad Tamer
 */


typedef unsigned char u8;
typedef signed char s8;
#define PORT_A *((volatile u8*)0x3B)
#define DDR_A *((volatile u8*)0x3A)
#define PIN_A *((volatile u8*)0x39)

#define PORT_B *((volatile u8*)0x38)
#define DDR_B *((volatile u8*)0x37)
#define PIN_B *((volatile u8*)0x36)

#define PORT_C *((volatile u8*)0x35)
#define DDR_C *((volatile u8*)0x34)
#define PIN_C *((volatile u8*)0x33)

#define PORT_D *((volatile u8*)0x38)
#define DDR_D *((volatile u8*)0x37)
#define PIN_D *((volatile u8*)0x36)

#include <util/delay.h>


int main() {
    s8 counter = 0;
    u8 seven_seg_arr[10] = {
        0xC0, // 0
        0xF9, // 1
        0xA4, // 2
        0xB0, // 3
        0x99, // 4
        0x92, // 5
        0x82, // 6
        0xF8, // 7
        0x80, // 8
        0x98  // 9
    };

    // Set PORTA pin 0 as input for switch 1
    DDR_A &= ~(1 << 0);
    // Set PORTA pin 1 as input for switch 2
    DDR_A &= ~(1 << 1);
    // Enable pull-up resistor for PORTA pin 0
    PORT_A |= (1 << 0);
    // Enable pull-up resistor for PORTA pin 1
    PORT_A |= (1 << 1);
    // Set PORTC as output for seven-segment
    DDR_C = 0xFF;

    while (1) {
        if (!(PIN_A & (1 << 0))) { // Check if switch 1 is pressed
            _delay_ms(50); // Debouncing delay
            if (!(PIN_A & (1 << 0))) {
                for (counter = 0; counter <= 9; counter++) {
                    PORT_C = seven_seg_arr[counter]; // Display the number
                    _delay_ms(500); // Delay 0.5 second
                }
                while (!(PIN_A & (1 << 0))) { // Wait until switch 1 is released
                    _delay_ms(50); // Debouncing delay
                }
            }
        }
        if (!(PIN_A & (1 << 1))) { // Check if switch 2 is pressed
            _delay_ms(50); // Debouncing delay
            if (!(PIN_A & (1 << 1))) {
                for (counter = 9; counter >= 0; counter--) {
                    PORT_C = seven_seg_arr[counter]; // Display the number
                    _delay_ms(500); // Delay 0.5 second
                }
                while (!(PIN_A & (1 << 1))) { // Wait until switch 2 is released
                    _delay_ms(50); // Debouncing delay
                }
            }
        }
    }
    return 0;
}
