/*
 * ADC_porgram.c
 *
 *  Created on: Jul 1, 2024
 *      Author: Mohammad Tamer
 */

#include "../../LIB/BIT_MATH.h"
#include "../../LIB/STD_TYPES.h"

#include "ADC_config.h"
#include "ADC_private.h"
#include "ADC_interface.h"
#include "ADC_register.h"

void ADC_voidInit(void)
{
/*Check the reference voltage for ADC*/
	#if ADC_REF_VOLT == AREF
		CLR_BIT(ADMUX,ADCMUX_REFS0);
		CLR_BIT(ADMUX,ADCMUX_REFS1);
	#elif ADC_REF_VOLT == AVCC
		SET_BIT(ADMUX,ADCMUX_REFS0);
		CLR_BIT(ADMUX,ADCMUX_REFS1);
	#elif ADC_REF_VOLT == INTERNAL_VOLT
		SET_BIT(ADMUX,ADCMUX_REFS0);
		SET_BIT(ADMUX,ADCMUX_REFS1);
	#else
		#error "Wrong ADC_REF_VOLT configuration option"
#endif


/*Check ADC enable or disable*/
	#if	  ADC_ENABLE_Status == ENABLED
		  SET_BIT(ADCSRA,ADCSRA_ADEN);
	#elif ADC_ENABLE_Status == DISABLED
		  CLR_BIT(ADCSRA,ADCSRA_ADEN);
	#else
		#error "Wrong ADC_ENABLE configuration option"
#endif


/*Check ADC resolution*/
	#if	  ADC_RESOLUTION == EIGHT_BITS // Left Adjustment
		  SET_BIT(ADMUX,ADCMUX_ADLAR);
	#elif ADC_RESOLUTION == TEN_BITS   // Right Adjustment
		  CLR_BIT(ADMUX,ADCMUX_ADLAR);
	#else
		#error "Wrong ADC_RESOLUTION configuration option"
#endif


/*Check ADC auto trigger enable*/
#if	  ADC_AUTO_TRIGGER_EN == ENABLED
	  SET_BIT(ADCSRA,ADCSRA_ADATE);
#elif ADC_AUTO_TRIGGER_EN == DISABLED
	  CLR_BIT(ADCSRA,ADCSRA_ADATE);
#else
	#error "Wrong ADC_RESOLUTION configuration option"
#endif


/*Check ADC auto interrupt enable*/
	  #if   ADC_INT_EN == ENABLED
	  	    SET_BIT(ADCSRA,ADCSRA_ADIE );
	  #elif ADC_INT_EN == DISABLED
	  	    CLR_BIT(ADCSRA,ADCSRA_ADIE);
	  #else
	  	#error "Wrong ADC_RESOLUTION configuration option"
#endif

}

