/*
 * main.c
 *
 *  Created on: Jul 20, 2024
 *      Author:  Mohammad Tamer
 */


#include "../../LIB/STD_TYPES.h"
#include "../../LIB/BIT_MATH.h"

#include "../../MCAL/PORT/PORT_interface.h"
#include "../../MCAL/DIO/DIO_interface.h"
#include "../../MCAL/Timers/Timers_interface.h"
#include "../../MCAL/External_Interrupt/EXI_interface.h"
#include "../../MCAL/GIE/GIE_interface.h"

#include "Traffic_Light.h"


int main(void)
{
    // Initialize traffic light system
	Init_voidTrafficLightSystem();

    while (1)
    {
        if (mode == 0)
        {
            // Normal Mode
            switch (state)
            {
                case 0: // Car Green
                    DIO_Set_Pin_Value(CAR_GREEN_PORT, CAR_GREEN_PIN, DIO_PIN_HIGH);
                    DIO_Set_Pin_Value(CAR_YELLOW_PORT, CAR_YELLOW_PIN, DIO_PIN_LOW);
                    DIO_Set_Pin_Value(CAR_RED_PORT, CAR_RED_PIN, DIO_PIN_LOW);
                    DIO_Set_Pin_Value(PED_RED_PORT, PED_RED_PIN, DIO_PIN_LOW);
                    DIO_Set_Pin_Value(CAR_YELLOW_PORT, PED_YELLOW_PIN, DIO_PIN_LOW);
                    DIO_Set_Pin_Value(PED_GREEN_PORT, PED_GREEN_PIN, DIO_PIN_LOW);
                    break;
                case 1: // Car Yellow
                    DIO_Set_Pin_Value(CAR_GREEN_PORT, CAR_GREEN_PIN, DIO_PIN_LOW);
                    DIO_Set_Pin_Value(CAR_YELLOW_PORT, CAR_YELLOW_PIN, DIO_PIN_HIGH);
                    DIO_Set_Pin_Value(CAR_RED_PORT, CAR_RED_PIN, DIO_PIN_LOW);
                    DIO_Set_Pin_Value(PED_RED_PORT, PED_RED_PIN, DIO_PIN_LOW);
                    DIO_Set_Pin_Value(CAR_YELLOW_PORT, PED_YELLOW_PIN, DIO_PIN_LOW);
                    DIO_Set_Pin_Value(PED_GREEN_PORT, PED_GREEN_PIN, DIO_PIN_LOW);
                    break;
                case 2: // Car Red
                    DIO_Set_Pin_Value(CAR_GREEN_PORT, CAR_GREEN_PIN, DIO_PIN_LOW);
                    DIO_Set_Pin_Value(CAR_YELLOW_PORT, CAR_YELLOW_PIN, DIO_PIN_LOW);
                    DIO_Set_Pin_Value(CAR_RED_PORT, CAR_RED_PIN, DIO_PIN_HIGH);
                    DIO_Set_Pin_Value(PED_RED_PORT, PED_RED_PIN, DIO_PIN_LOW);
                    DIO_Set_Pin_Value(CAR_YELLOW_PORT, PED_YELLOW_PIN, DIO_PIN_LOW);
                    DIO_Set_Pin_Value(PED_GREEN_PORT, PED_GREEN_PIN, DIO_PIN_LOW);
                    break;
            }
        }
        else
        {
            // Pedestrian Mode
        	switch(PED_mode)
        	{
        		case 0 : //If pressed when the cars' Red LED is on
				DIO_Set_Pin_Value(CAR_GREEN_PORT, CAR_GREEN_PIN, DIO_PIN_LOW);
				DIO_Set_Pin_Value(CAR_YELLOW_PORT, CAR_YELLOW_PIN, DIO_PIN_LOW);
				DIO_Set_Pin_Value(CAR_RED_PORT, CAR_RED_PIN, DIO_PIN_HIGH);
				DIO_Set_Pin_Value(PED_RED_PORT, PED_RED_PIN, DIO_PIN_HIGH);
				DIO_Set_Pin_Value(CAR_YELLOW_PORT, PED_YELLOW_PIN, DIO_PIN_LOW);
				DIO_Set_Pin_Value(PED_GREEN_PORT, PED_GREEN_PIN, DIO_PIN_LOW);
				break;
        		case 1:
				switch (state)
				{
			    case 0: // If pressed when the cars' Green LED
			        DIO_Set_Pin_Value(CAR_GREEN_PORT, CAR_GREEN_PIN, DIO_PIN_LOW);
			        /*Blinking*/
			        DIO_Toggle_Pin_Value(CAR_YELLOW_PORT, CAR_YELLOW_PIN);
			        DIO_Set_Pin_Value(CAR_RED_PORT, CAR_RED_PIN, DIO_PIN_LOW);
			        /*HIGH*/
			        DIO_Set_Pin_Value(PED_RED_PORT, PED_RED_PIN, DIO_PIN_HIGH);
			        DIO_Set_Pin_Value(CAR_YELLOW_PORT, PED_YELLOW_PIN, DIO_PIN_LOW);
			        DIO_Set_Pin_Value(PED_GREEN_PORT, PED_GREEN_PIN, DIO_PIN_LOW);
			        break;
			    case 1: // Continue if pressed when the cars' Green LED
			        DIO_Set_Pin_Value(CAR_GREEN_PORT, CAR_GREEN_PIN, DIO_PIN_LOW);
			        /*Blinking*/
			        DIO_Toggle_Pin_Value(CAR_YELLOW_PORT, CAR_YELLOW_PIN);
			        DIO_Set_Pin_Value(CAR_RED_PORT, CAR_RED_PIN, DIO_PIN_LOW);
			        DIO_Set_Pin_Value(PED_RED_PORT, PED_RED_PIN, DIO_PIN_LOW);
			        /*Blinking*/
			        DIO_Toggle_Pin_Value(PED_YELLOW_PORT, PED_YELLOW_PIN);
			        DIO_Set_Pin_Value(PED_GREEN_PORT, PED_GREEN_PIN, DIO_PIN_LOW);
			        break;
			    case 2: // Continue if pressed when the cars' Green LED
			        DIO_Set_Pin_Value(CAR_GREEN_PORT, CAR_GREEN_PIN, DIO_PIN_LOW);
			        DIO_Set_Pin_Value(CAR_YELLOW_PORT, CAR_YELLOW_PIN,DIO_PIN_LOW);
			        /*HIGH*/
			        DIO_Set_Pin_Value(CAR_RED_PORT, CAR_RED_PIN, DIO_PIN_HIGH);
			        DIO_Set_Pin_Value(PED_RED_PORT, PED_RED_PIN, DIO_PIN_LOW);
			        DIO_Set_Pin_Value(CAR_YELLOW_PORT, PED_YELLOW_PIN, DIO_PIN_LOW);
			        /*HIGH*/
			        DIO_Set_Pin_Value(PED_GREEN_PORT, PED_GREEN_PIN, DIO_PIN_HIGH);
			        break;
				}
        	}
        }
    }
}


//switch (state)
//{

//    default:
//        DIO_Set_Pin_Value(CAR_GREEN_PORT, CAR_GREEN_PIN, DIO_PIN_LOW);
//        DIO_Toggle_Pin_Value(CAR_YELLOW_PORT, CAR_YELLOW_PIN);
//        DIO_Set_Pin_Value(CAR_RED_PORT, CAR_RED_PIN, DIO_PIN_LOW);
//        DIO_Set_Pin_Value(PED_RED_PORT, PED_RED_PIN, DIO_PIN_LOW);
//        DIO_Toggle_Pin_Value(PED_YELLOW_PORT, PED_YELLOW_PIN);
//        DIO_Set_Pin_Value(PED_GREEN_PORT, PED_GREEN_PIN, DIO_PIN_HIGH);
//        break;
//}
//DIO_Set_Pin_Value(CAR_GREEN_PORT, CAR_GREEN_PIN, DIO_PIN_LOW);
//DIO_Set_Pin_Value(CAR_YELLOW_PORT, CAR_YELLOW_PIN, DIO_PIN_LOW);
//DIO_Set_Pin_Value(CAR_RED_PORT, CAR_RED_PIN, DIO_PIN_HIGH);
//DIO_Set_Pin_Value(PED_RED_PORT, PED_RED_PIN, DIO_PIN_HIGH);
//DIO_Set_Pin_Value(PED_YELLOW_PORT, PED_YELLOW_PIN, DIO_PIN_LOW);
//DIO_Set_Pin_Value(PED_GREEN_PORT, PED_GREEN_PIN, DIO_PIN_LOW);
