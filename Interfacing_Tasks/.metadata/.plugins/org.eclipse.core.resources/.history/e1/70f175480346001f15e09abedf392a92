/*
 * Timers_program.c
 *
 *  Created on: Jul 19, 2024
 *      Author: Mohammad Tamer
 */


#include "../../LIB/BIT_MATH.h"
#include "../../LIB/STD_TYPES.h"

#include "Timers_config.h"
#include "Timers_interface.h"
#include "Timers_private.h"
#include "Timers_register.h"

u8 TIMER0_u8Init(u8 Copy_u8WaveMode , u8 Copy_u8CompereMode ,u8 Copy_u8Prescaler)
{
	u8 Local_u8ErrorState = OK ;

	switch (Copy_u8WaveMode)
	{
		case NORMAL:
			CLR_BIT(TCCR0,TCCR0_WGM00);
			CLR_BIT(TCCR0,TCCR0_WGM01);
			/*Enable overflow interrupt*/
			SET_BIT(TIMSK,TIMSK_TOIE0);
			break;
		case PHASE_CORRECT:
			SET_BIT(TCCR0,TCCR0_WGM00);
			CLR_BIT(TCCR0,TCCR0_WGM01);
			break;
		case CTC:
			CLR_BIT(TCCR0,TCCR0_WGM00);
			SET_BIT(TCCR0,TCCR0_WGM01);
			/*Enable output Compare interrupt*/
			SET_BIT(TIMSK,TIMSK_OCIE0);
			break;
		case FAST_PWM:
			SET_BIT(TCCR0,TCCR0_WGM00);
			SET_BIT(TCCR0,TCCR0_WGM01);
			break;
		default:
			Local_u8ErrorState = NOK ;
	}

	return	Local_u8ErrorState;
}

void TIMER0_voidSetCompMatchVal(u8 Copy_u8Value)
{

}

u8 TIMER_u8SetCallBack(u8 Copy_u8INT_ID,void (*Copy_pvCallBackFunc)(void))
{

}
